*Link 'Sandbox' SQL Database;
%INCLUDE "\\cpadm001.corp.cathaypacific.com\clk\DEPT\CLKDEPT7\CPL\60Shared-CPL\AML MEI\Reporting & Insights\00 Standardization\03. SAS Code\SAS COMMON CODE.sas" /lrecl=500;

LIBNAME CIS ODBC DSN="Sandbox" SCHEMA=CIS;
LIBNAME DBO ODBC DSN="Sandbox" SCHEMA=dbo;
%LET OUT_PATH=\\cpadm001.corp.cathaypacific.com\clk\DEPT\CLKDEPT7\CPL\60Shared-CPL\Modelling_Insights\10 Customer LifeStage Analysis (2014-08-05)\Working\WORK;
LIBNAME LOCAL "C:\sas TEMP\01 Lifestage Analysis";
LIBNAME LIB "C:\sas TEMP";

LIBNAME TTR "C:\sas TEMP\01 Lifestage Analysis\Time to Redeem";

DATA LIB.REDEMPTION_CLAIM(COMPRESS=YES);
SET CIS.REDEMPTION_CLAIM;
RUN;


/*
Assumptions
-Observe How many miles/what actions before & after redeem 
-Similar Customer who may redeem? (Model)
*/

/*=====>>
Analysis 1: Behavior before/after redeem
-Act
-Miles
-Pillar Crossed
-Frequent
<<=====*/

PROC SQL;
CREATE TABLE MAIN_RDM AS
SELECT DISTINCT INDIV_ID
		,JOIN_DT
		,KEY_MARKET
		,AGE_GROUP
		,(COMPRESS(SUBSTR(ACT_GP,1,4))||COMPRESS(SUBSTR(ACT_PILLAR,FIND(ACT_PILLAR,'_')+1,8))) AS REDEEM_ITEM
		,INTNX('MONTH',ACTIVITY_DATE,0,'END') AS REDEEM_DATE FORMAT DATE9.
		,SUM(MILES) AS REDEEM_MILES
FROM LOCAL.LIFECYCLE_RAW
WHERE SUBSTR(ACT_GP,1,3) = "RDM" AND  '01JAN2013'D<=ACTIVITY_DATE<='31JAN2013'D
GROUP BY 1,2,3,4,5,6
;QUIT;
%CHK(MAIN_RDM,INDIV_ID);

DATA MAIN_RDM;
SET MAIN_RDM;
SEQ_N = _N_;
RUN;

/*AGGREGATE SEVERAL REDEEM IN ONE MONTH*/
PROC SQL;
CREATE TABLE MAIN_RDM_FINAL AS
SELECT DISTINCT A1.INDIV_ID
		,A1.JOIN_DT
		,A1.KEY_MARKET
		,A1.AGE_GROUP
		,A1.REDEEM_ITEM AS REDEEM_ITEM_1
		,A1.REDEEM_DATE
		,SUM(A1.REDEEM_MILES) AS TOTAL_REDEEM_MILES
		,INT(AVG(A1.REDEEM_MILES)) AS AVG_REDEEM_MILES FORMAT 6.0
		,COUNT(*) AS NBR_RDM_TYPE
		,(CASE WHEN A1.INDIV_ID = A2.INDIV_ID AND A1.SEQ_N = (A2.SEQ_N -1) THEN A2.REDEEM_ITEM ELSE '' END) AS REDEEM_ITEM_2 
		,(CASE WHEN A1.INDIV_ID = A3.INDIV_ID AND A1.SEQ_N = (A3.SEQ_N -1) THEN A3.REDEEM_ITEM ELSE '' END) AS REDEEM_ITEM_3 
		,(CASE WHEN A1.INDIV_ID = A4.INDIV_ID AND A1.SEQ_N = (A4.SEQ_N -1) THEN A4.REDEEM_ITEM ELSE '' END) AS REDEEM_ITEM_4 
		,(CASE WHEN A1.INDIV_ID = A5.INDIV_ID AND A1.SEQ_N = (A5.SEQ_N -1) THEN A5.REDEEM_ITEM ELSE '' END) AS REDEEM_ITEM_5
FROM MAIN_RDM AS A1 LEFT JOIN MAIN_RDM AS A2 ON A1.INDIV_ID = A2.INDIV_ID AND A1.SEQ_N = (A2.SEQ_N -1)
					LEFT JOIN MAIN_RDM AS A3 ON A1.INDIV_ID = A2.INDIV_ID AND A1.SEQ_N = (A3.SEQ_N -2)
					LEFT JOIN MAIN_RDM AS A4 ON A1.INDIV_ID = A2.INDIV_ID AND A1.SEQ_N = (A4.SEQ_N -3)
					LEFT JOIN MAIN_RDM AS A5 ON A1.INDIV_ID = A2.INDIV_ID AND A1.SEQ_N = (A5.SEQ_N -4)
/*FILTER: EXCLUDE CUSTOMER JOIN > 2012*/
WHERE A1.JOIN_DT < "01JAN2012"D
GROUP BY A1.INDIV_ID
HAVING A1.SEQ_N = MIN(A1.SEQ_N)
;QUIT;
%CHK(MAIN_RDM_FINAL,INDIV_ID);

PROC SQL;
CREATE TABLE BEFORE_RDM AS
SELECT DISTINCT MAIN.INDIV_ID
		,MAIN.*
		,COUNT(*) AS B4_TRANX
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,3) = "RDM" THEN 1 ELSE 0 END) AS B4_TRANX_RDM
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,4) = "ACRL" THEN 1 ELSE 0 END) AS B4_TRANX_ACRL
		,SUM(RAW.MILES) AS B4_MILES
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,3) = "RDM" THEN RAW.MILES ELSE 0 END) AS B4_MILES_RDM
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,4) = "ACRL" THEN RAW.MILES ELSE 0 END) AS B4_MILES_ACRL
		,COUNT(DISTINCT ACT_PILLAR) AS B4_XPILLAR
FROM MAIN_RDM_FINAL AS MAIN LEFT JOIN LOCAL.LIFECYCLE_RAW AS RAW 
ON MAIN.INDIV_ID = RAW.INDIV_ID AND 0<INTCK("MONTH",RAW.ACTIVITY_DATE,MAIN.REDEEM_DATE)<=12 
GROUP BY MAIN.INDIV_ID,MAIN.REDEEM_DATE,MAIN.REDEEM_ITEM_1,MAIN.TOTAL_REDEEM_MILES
;QUIT;

PROC SQL;
CREATE TABLE BEFORE_AFTER_RDM AS
SELECT DISTINCT B4.INDIV_ID
		,B4.*
		,COUNT(*) AS AF_TRANX
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,3) = "RDM" THEN 1 ELSE 0 END) AS AF_TRANX_RDM
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,4) = "ACRL" THEN 1 ELSE 0 END) AS AF_TRANX_ACRL
		,SUM(RAW.MILES) AS AF_MILES
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,3) = "RDM" THEN RAW.MILES ELSE 0 END) AS AF_MILES_RDM
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,4) = "ACRL" THEN RAW.MILES ELSE 0 END) AS AF_MILES_ACRL
		,COUNT(DISTINCT ACT_PILLAR) AS AF_XPILLAR
FROM BEFORE_RDM AS B4 LEFT JOIN LOCAL.LIFECYCLE_RAW AS RAW 
ON B4.INDIV_ID = RAW.INDIV_ID AND 0<INTCK("MONTH",B4.REDEEM_DATE,RAW.ACTIVITY_DATE)<=12
GROUP BY B4.INDIV_ID,B4.REDEEM_DATE,B4.REDEEM_ITEM_1,B4.TOTAL_REDEEM_MILES
;QUIT;
%chk(BEFORE_AFTER_RDM,INDIV_ID);

/*STEP 2: SPOT OUT THE DIFFERENCE
MILES DIFFERENCE
TRANX DIFFERENCE
ACRL DIFFERENCE
RDM DIFFERENCE
XPILLAR DIFFERENCE
*/

/*
FILTER OUT THOSE CUSTOMERS CANNOT SATISFY;
JOIN_DT <2012
*/

%macro missing_treat(tables); /*make missing value as zero*/
data &tables. (drop= i j);
set &tables.;

array num_var (*) _numeric_;
          do i = 1 to dim (num_var);
               if num_var (i) eq . then num_var (i) = 0;
          end;

array char_var (*) _CHAR_;
          do j = 1 to dim (char_var);
               if char_var (j) eq "" then char_var (j) = "N/A";
          end;
run;
%mend missing_treat;
%missing_treat(BEFORE_AFTER_RDM);

DATA S2_DIFFERENCE;
SET BEFORE_AFTER_RDM;
/*RDM_MILES_GP*/
FORMAT REDEEM_MILES_GP $20.;
IF TOTAL_REDEEM_MILES <= 5000 THEN REDEEM_MILES_GP = "a.<5000";
IF 5000< TOTAL_REDEEM_MILES <= 12500 THEN REDEEM_MILES_GP = "b.5001~12500";
IF 12500< TOTAL_REDEEM_MILES <= 20000 THEN REDEEM_MILES_GP = "c.12500~20000";
IF 20001< TOTAL_REDEEM_MILES <= 30000 THEN REDEEM_MILES_GP = "d.20001~30000";
IF 30000< TOTAL_REDEEM_MILES <= 50000 THEN REDEEM_MILES_GP = "e.30001~50000";
IF 50000< TOTAL_REDEEM_MILES THEN REDEEM_MILES_GP = "f.>50000";

/*OBSERVATION ATTRIBUTES*/
DIF_MILES 		= AF_MILES - B4_TRANX;
DIF_MILES_ACRL 	= AF_MILES_ACRL - B4_MILES_ACRL;
DIF_MILES_RDM 	= AF_MILES_RDM - B4_MILES_RDM;
DIF_TRANX 		= AF_TRANX - B4_TRANX; 
DIF_TRANX_ACRL 	= AF_TRANX_ACRL - B4_TRANX_ACRL;
DIF_TRANX_RDM 	= AF_TRANX_RDM - B4_TRANX_RDM;
DIF_XPILLAR 	= AF_XPILLAR - B4_XPILLAR;
/*OBSERVATION GROUP*/
%MACRO DIF_GP(VAR);
/*HIGH LEVEL DIFFERENCE GROUP*/
FORMAT DIF_&VAR._GP_H $20.;
IF DIF_&VAR. < 0 THEN DIF_&VAR._GP_H = "DOWN";
IF DIF_&VAR. = 0 THEN DIF_&VAR._GP_H = "NO CHANGE";
IF DIF_&VAR. > 0 THEN DIF_&VAR._GP_H = "UP";
IF DIF_&VAR._GP_H = '' THEN DIF_&VAR._GP_H = 'N/A';

/*SUB LEVEL DIFFERENCE GROUP*/

FORMAT DIF_PERCENT_&VAR. 6.2;
DIF_PERCENT_&VAR. = DIF_&VAR./B4_&VAR.;

FORMAT DIF_&VAR._GP $30.;
/*DOWN*/
IF AF_&VAR. = 0 AND B4_&VAR. > 0 THEN DIF_&VAR._GP = "DOWN(M TO 0)";
IF AF_&VAR. NE 0 AND  DIF_PERCENT_&VAR. < -1 THEN DIF_&VAR._GP = "DOWN(<-100%)";
IF AF_&VAR. NE 0 AND -1<= DIF_PERCENT_&VAR. <0 THEN DIF_&VAR._GP = "DOWN(-1~100%)";
/*NO CHANGE*/
IF DIF_PERCENT_&VAR. = 0 AND (AF_&VAR. NE 0 OR B4_&VAR. NE 0 )THEN  DIF_&VAR._GP = "NO CHANGE(M TO M)";
IF AF_&VAR. = 0 AND B4_&VAR. = 0 THEN  DIF_&VAR._GP = "NO CHANGE(0 TO 0)";
/*UP*/
IF B4_&VAR. NE 0 AND  DIF_PERCENT_&VAR. > 1 THEN DIF_&VAR._GP = "UP(>+100%)";
IF B4_&VAR. NE 0 AND 0 < DIF_PERCENT_&VAR. <=1 THEN DIF_&VAR._GP = "UP(+1~100%)";
IF B4_&VAR. = 0 AND AF_&VAR. > 0 THEN DIF_&VAR._GP = "UP(0 TO M)";
/*EXCEPTION*/
IF DIF_&VAR._GP = '' THEN DIF_&VAR._GP = "N/A";
%MEND;

%DIF_GP(MILES);		
%DIF_GP(MILES_ACRL);	
%DIF_GP(MILES_RDM); 	
%DIF_GP(TRANX); 		
%DIF_GP(TRANX_ACRL);	
%DIF_GP(TRANX_RDM);	 
%DIF_GP(XPILLAR);	

RUN;


PROC FREQ DATA=S2_DIFFERENCE;
TABLE 
DIF_MILES_ACRL_gp_H*DIF_MILES_ACRL_gp
/NOROW NOCOL NOPERCENT MISSING;
/*WHERE B4_MILES_ACRL = 0;*/
		RUN;


/*SUMMARY*/
PROC SQL;
CREATE TABLE S3_DIF_SUMMARY AS
SELECT 	DISTINCT REDEEM_MILES_GP
		,REDEEM_ITEM_1 AS REDEEM_ITEM
		,AGE_GROUP
		,KEY_MARKET
		,DIF_MILES_ACRL_GP_H
		,DIF_MILES_ACRL_GP
		,DIF_TRANX_GP_H
		,DIF_TRANX_GP
		,DIF_TRANX_RDM_GP_H
		,DIF_TRANX_RDM_GP
		,COUNT(DISTINCT INDIV_ID) AS NBR_CUST
		,SUM(B4_MILES_ACRL) AS X_MILES_ACRL_B4 FORMAT 6.0
		,SUM(AF_MILES_aCRL) AS X_MILES_ACRL_AF FORMAT 6.0
		,SUM(DIF_MILES) AS DIF_MILES_TOTAL
		,SUM(DIF_TRANX) AS DIF_TRANX_TOTAL
		,SUM(DIF_TRANX_RDM) AS DIF_TRANX_RDM
		,SUM(DIF_MILES_ACRL) AS DIF_ACRL_MILES_TOTAL
FROM S2_DIFFERENCE
GROUP BY 1,2,3,4,5,6,7,8,9,10
;QUIT;

/*EXPORT*/
PROC EXPORT DATA=S3_DIF_SUMMARY
			OUTFILE="C:\sas TEMP\DIF_SUMMARY.CSV"
			DBMS=CSV REPLACE;
			RUN;


/*=====>>>
=======>>>
=======>>>
BENCHMARK WITH ACCRUAL*/

PROC SQL;
CREATE TABLE MAIN_ACRL AS
SELECT DISTINCT INDIV_ID
		,JOIN_DT
		,KEY_MARKET
		,AGE_GROUP
		,(COMPRESS(SUBSTR(ACT_GP,1,5))||COMPRESS(SUBSTR(ACT_PILLAR,FIND(ACT_PILLAR,'_')+1,8))) AS ACCRUAL_ITEM
		,INTNX('MONTH',ACTIVITY_DATE,0,'END') AS ACCRUAL_DATE FORMAT DATE9.
		,SUM(MILES) AS ACCRUAL_MILES
FROM LOCAL.LIFECYCLE_RAW
WHERE SUBSTR(ACT_GP,1,3) = "ACR" AND  '01JAN2013'D<=ACTIVITY_DATE<='31JAN2013'D
GROUP BY 1,2,3,4,5,6
;QUIT;

PROC SQL;
CREATE TABLE BEFORE_ACRL AS
SELECT DISTINCT MAIN.INDIV_ID
		,MAIN.*
		,COUNT(*) AS B4_TRANX
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,3) = "RDM" THEN 1 ELSE 0 END) AS B4_TRANX_RDM
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,4) = "ACRL" THEN 1 ELSE 0 END) AS B4_TRANX_ACRL
		,SUM(RAW.MILES) AS B4_MILES
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,3) = "RDM" THEN RAW.MILES ELSE 0 END) AS B4_MILES_RDM
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,4) = "ACRL" THEN RAW.MILES ELSE 0 END) AS B4_MILES_ACRL
		,COUNT(DISTINCT ACT_PILLAR) AS B4_XPILLAR
FROM MAIN_ACRL AS MAIN LEFT JOIN LOCAL.LIFECYCLE_RAW AS RAW 
ON MAIN.INDIV_ID = RAW.INDIV_ID AND 0<INTCK("MONTH",RAW.ACTIVITY_DATE,MAIN.ACCRUAL_DATE)<=12 
GROUP BY MAIN.INDIV_ID,MAIN.ACCRUAL_DATE,MAIN.ACCRUAL_ITEM,MAIN.ACCRUAL_MILES
;QUIT;

PROC SQL;
CREATE TABLE BEFORE_AFTER_ACRL AS
SELECT DISTINCT B4.INDIV_ID
		,B4.*
		,COUNT(*) AS AF_TRANX
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,3) = "RDM" THEN 1 ELSE 0 END) AS AF_TRANX_RDM
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,4) = "ACRL" THEN 1 ELSE 0 END) AS AF_TRANX_ACRL
		,SUM(RAW.MILES) AS AF_MILES
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,3) = "RDM" THEN RAW.MILES ELSE 0 END) AS AF_MILES_RDM
		,SUM(CASE WHEN SUBSTR(RAW.ACT_GP,1,4) = "ACRL" THEN RAW.MILES ELSE 0 END) AS AF_MILES_ACRL
		,COUNT(DISTINCT ACT_PILLAR) AS AF_XPILLAR
FROM BEFORE_ACRL AS B4 LEFT JOIN LOCAL.LIFECYCLE_RAW AS RAW 
ON B4.INDIV_ID = RAW.INDIV_ID AND 0<INTCK("MONTH",B4.ACCRUAL_DATE,RAW.ACTIVITY_DATE)<=12
GROUP BY B4.INDIV_ID,B4.ACCRUAL_DATE,B4.ACCRUAL_ITEM,B4.ACCRUAL_MILES
;QUIT;

/*STEP 2: SPOT OUT THE DIFFERENCE
MILES DIFFERENCE
TRANX DIFFERENCE
ACRL DIFFERENCE
RDM DIFFERENCE
XPILLAR DIFFERENCE
*/

/*
FILTER OUT THOSE CUSTOMERS CANNOT SATISFY;
JOIN_DT <2012
*/

DATA S2_DIFFERENCE_ACRL;
SET BEFORE_AFTER_ACRL;
/*RDM_MILES_GP*/
FORMAT ACCRUAL_MILES_GP $20.;
IF ACCRUAL_MILES <= 5000 THEN ACCRUAL_MILES_GP = "a.<5000";
IF 5000< ACCRUAL_MILES <= 12500 THEN ACCRUAL_MILES_GP = "b.5001~12500";
IF 12500< ACCRUAL_MILES <= 20000 THEN ACCRUAL_MILES_GP = "c.12500~20000";
IF 20001< ACCRUAL_MILES <= 30000 THEN ACCRUAL_MILES_GP = "d.20001~30000";
IF 30000< ACCRUAL_MILES <= 50000 THEN ACCRUAL_MILES_GP = "e.30001~50000";
IF 50000< ACCRUAL_MILES THEN ACCRUAL_MILES_GP = "f.>50000";

/*OBSERVATION ATTRIBUTES*/
DIF_MILES 		= AF_MILES - B4_TRANX;
DIF_MILES_ACRL 	= AF_MILES_ACRL - B4_MILES_ACRL;
DIF_MILES_RDM 	= AF_MILES_RDM - B4_MILES_RDM;
DIF_TRANX 		= AF_TRANX - B4_TRANX; 
DIF_TRANX_ACRL 	= AF_TRANX_ACRL - B4_TRANX_ACRL;
DIF_TRANX_RDM 	= AF_TRANX_RDM - B4_TRANX_RDM;
DIF_XPILLAR 	= AF_XPILLAR - B4_XPILLAR;
/*OBSERVATION GROUP*/
%MACRO DIF_GP(VAR);
FORMAT DIF_&VAR._GP $20.;
IF DIF_&VAR. < 0 THEN DIF_&VAR._GP = "DOWN";
ELSE IF DIF_&VAR. = 0 THEN DIF_&VAR._GP = "NO CHANGE";
ELSE DIF_&VAR._GP = "UP";

IF AF_&VAR. = 0 THEN DIF_&VAR._GP = "INACTIVE";
IF AF_&VAR. = 0 AND B4_&VAR. = 0 THEN DIF_&VAR._GP = "NO ACTIVITY";
%MEND;

%DIF_GP(MILES);		
%DIF_GP(MILES_ACRL);	
%DIF_GP(MILES_RDM); 	
%DIF_GP(TRANX); 		
%DIF_GP(TRANX_ACRL);	
%DIF_GP(TRANX_RDM);	
%DIF_GP(XPILLAR);	
/*FILTER*/
WHERE JOIN_DT < "01JAN2012"D;
RUN;

/*SUMMARY - REDEEM*/
PROC SQL;
SELECT   REDEEM_ITEM_1
		,DIF_MILES_ACRL_GP
		,DIF_TRANX_GP
		,DIF_TRANX_RDM_GP
		,AVG(B4_TRANX_ACRL) AS AVG_B4_TRANX_ACRL FORMAT 8.1
		,AVG(AF_TRANX_ACRL) AS AVG_AF_TRANX_ACRL FORMAT 8.1
		,AVG(B4_TRANX_RDM) AS AVG_B4_TRANX_RDM FORMAT 8.1
		,AVG(AF_TRANX_RDM) AS AVG_AF_TRANX_RDM FORMAT 8.1
		,AVG(B4_MILES_ACRL) AS AVG_B4_MILES_ACRL FORMAT 8.0
		,AVG(AF_MILES_ACRL) AS AVG_AF_MILES_ACRL FORMAT 8.0
		,AVG(B4_MILES_RDM) AS AVG_B4_MILES_RDM FORMAT 8.0
		,AVG(AF_MILES_RDM) AS AVG_AF_MILES_RDM FORMAT 8.0
		,AVG(B4_XPILLAR) AS AVG_B4_XPILLAR FORMAT 8.1
		,AVG(AF_XPILLAR) AS AVG_AF_XPILLAR FORMAT 8.1
FROM S2_DIFFERENCE
group by 1,2,3,4
;QUIT;















/*=====>>
PULSE CHECKING*/

DATA PULSE_CHECK;
SET S2_DIFFERENCE;
WHERE KEY_MARKET NE 'HK' AND REDEEM_ITEM = 'RDM_GIF' AND DIF_TRANX_GP = 'NO CHANGE'; 
RUN;

PROC FREQ DATA=S2_DIFFERENCE;
TABLE
REDEEM_ITEM*DIF_TRANX_GP
/ NOCOL NOPERCENT NOROW MISSING;
WHERE KEY_MARKET NE 'HK';
RUN;

PROC FREQ DATA=S2_DIFFERENCE_ACRL;
TABLE
ACCRUAL_ITEM*DIF_TRANX_GP
/ NOCOL NOPERCENT NOROW MISSING;
WHERE KEY_MARKET NE 'HK';
RUN;

proc univariate data=s2_difference;
histogram dif_tranx;
run;

/*A better one of the same histogram.*/
proc univariate data = s2_difference noprint;
title "Histogram for variable write";
histogram dif_miles_acrl /cfill=ligr normal cframe=liy barwidth=8 cv=black;
inset mean std max min;
run;
title;

proc sort data=S2_DIFFERENCE_ACRL;
by accrual_item;
run;

proc univariate data = S2_DIFFERENCE_ACRL noprint;
title "Histogram for variable write";
histogram dif_miles_acrl /cfill=ligr normal cframe=liy barwidth=8 cv=black;
inset mean std max min;
by accrual_item;
run;
title;


/*<<=====Pulse Checking Ends*/

proc freq data=S2_DIFFERENCE;
table dif_miles_acrl_gp/norow nocol nopercent missing;
where af_miles_acrl>b4_miles_acrl and redeem_item_1 = 'RDM_AIR';
run;

PROC SQL;
SELECT 
		dif_miles_acrl_gp
		,COUNT(*) AS CHK
		,SUM(B4_MILES_ACRL) AS X_MILES_ACRL_B4 FORMAT 6.0
		,SUM(AF_MILES_aCRL) AS X_MILES_ACRL_AF FORMAT 6.0
FROM S2_DIFFERENCE WHERE KEY_MARKET = 'HK' GROUP BY 1

;QUIT;
